#!/bin/python
# Author: Miguel Blach (Crossvale)
# Description: First deploying of the quotas and limits based on analysis.

import os



sSizeCandidates = ["aa01-dev","aa01-test","aa1-dev","aa1-test","admintools-dev","admintools-test","admshop01-dev","admshop01-test","ahpmvp-dev","ahpmvp-test","aicer-dev","aicer-test","aiceres-dev","aiceres-test","alanp-dev","alanp-test","alltools-dev","alltools-test","anadev-dev","anadev-test","and2018-dev","and2018-test","ans-dev","ans-test","ap4c-dev","ap4c-test","api-dev","api-test","apim-dev","apim-test","ardmirna-dev","ardmirna-test","asap-dev","asap-test","asap-wip","asi-dev","asi-test","at004-dev","at004-test","at006-dev","at006-test","atlasdev-dev","atlasdev-test","atlproj-dev","atlproj-test","avea-dev","avea-test","awi01-dev","awi01-test","b2p2-dev","b2p2-test","baumarku-dev","baumarku-test","bbkey-dev","bbkey-test","bdsmsf-dev","bdsmsf-test","bdssha-dev","bdssha-test","be011-dev","be011-test","beehiveds-dev","beehiveds-test","bg002-dev","bg002-test","bi-as-bidatalab-test","bi-as-brave","bi-as-chemdbs-marvinlive","bi-it-jobscheduling-dev","bi-it-oracle-apex-platform-dev","bi-it-talend","bi007-dev","bi007-test","bi040-dev","bi040-test","bi041-dev","bi041-test","biallcyte-dev","biallcyte-test","biamdm-dev","biamdm-test","biard-dev","biard-test","bichromchr-dev","bichromchr-test","bichromcut-dev","bichromcut-test","bichromedw-dev","bichromedw-test","bichromext-dev","bichromext-test","bichromwin-dev","bichromwin-test","bicpdp-dev","bicpdp-test","bier-dev","bier-test","bio-dev","bio-test","biob-dev","biob-test","biologics-dev","biologics-test","biomes7t1-dev","biomes7t1-test","biopoc-dev","biopoc-test","biox","birdsweb1-dev","birdsweb1-test","biwanp-dev","biwanp-test","bix-shared","bixat1-dev","bixat1-test","bixat2-dev","bixat2-test","bixat3-dev","bixat3-test","bixat4-dev","bixat4-test","bixat5-test","blip-dev","blip-test","bmlims-dev","bmlims-test","bwmc-dev","bwmc-test","byoda-dev","byoda-test","ca006-dev","ca006-test","ca007-dev","ca007-test","caiman-dev","caiman-test","cb3rbb-dev","cb3rbb-test","cbi-dev","cbi-test","cbpipes-dev","cbpipes-test","ccfw-dev","ccfw-test","ccs-dev","ccs-test","ccsrv-dev","ccsrv-test","ccworkers-dev","ccworkers-test","cdb-dev","cdb-test","ch003-dev","ch003-test","ch004-dev","ch004-test","ch005-dev","ch005-test","ch006-dev","ch006-test","chatbot-dev","chatbot-test","cheminf-dev","cheminf-test","chrommeth-dev","chrommeth-test","ciimcb-dev","ciimcb-test","citrixmgd-dev","citrixmgd-test","ckpt-dev","ckpt-test","clbi001-dev","clbi001-test","cleme-dev","cleme-test","clinical-reporting","cn008-dev","cn008-test","cn009-dev","cn009-test","codeshare-dev","codeshare-test","coerpa-dev","coerpa-test","cont001-dev","cont001-test","cpd3-dev","cpd3-test","crntools-dev","crntools-test","cross-dev","cross-test","ctcp-dev","ctcp-test","ctcq-dev","ctcq-test","custval-dev","custval-test","cz002-dev","cz002-test","cz003-dev","cz003-test","cz004-dev","cz004-test","d360-dev","d360-test","d8-dev","d8-test","daasinv-dev","daasinv-test","dahlia-dev","dahlia-test","daic-dev","daic-test","danishpr-dev","danishpr-test","davinciqa-dev","davinciqa-test","dbmgd-dev","dbmgd-test","dcst-dev","dcst-test","dd360-dev","dd360-test","ddsbase-dev","ddsbase-test","de010-dev","de010-test","dev01-dev","dev01-test","devops-dev","devops-test","dk011-dev","dk011-test","dk012-dev","dk012-test","dlab-dev","dlab-test","dphsites-dev","dphsites-test","drupalcoe-dev","drupalcoe-test","dss1-dev","dss1-test","dsw-dev","dsw-test","dt1-dev","dt1-test","dw01-dev","dw01-test","eai-dev","eai-test","ecs-ccs-dev","ecspltf-dev","ecspltf-test","eden-dev","eden-test","edgc-dev","edgc-test","edp-dev","edp-test","edpc-dev","edpc-test","edpda-dev","edpda-test","edpdb-dev","edpdb-test","edpdc-dev","edpdc-test","edpi-dev","edpi-test","edpj-dev","edpj-test","edpo-dev","edpo-test","edpp-dev","edpp-test","edpsup-dev","edpsup-test","edpta-dev","edpta-test","edptb-test","edptc-dev","edptc-test","eds-dev","eds-test","efp0000072-dev","efp0000072-test","efrpa-dev","efrpa-test","elab-dev","elab-test","elas2019bc-dev","elas2019bc-test","elt-dev","elt-test","engapp-dev","engapp-test","ennovation-dev","ennovation-test","ens-dev","ens-test","entpltf-dev","entpltf-test","ephemeral-storage","erms-dev","erms-test","esc-dev","esc-test","ewbtools-dev","ewbtools-test","exptool-dev","exptool-test","extest-dev","extest-test","fai-dev","fai-test","fbi-dev","fbi-test","fi015-dev","fi015-test","fi016-dev","fi016-test","fotst-dev","fotst-test","fotst10-dev","fotst10-test","fotst13-dev","fotst13-test","fotst2-dev","fotst2-test","fws-dev","fws-test","gdsdev-dev","gdsdev-test","ger-dev","ger-test","glbahea-dev","glbahea-test","gods-dev","gods-test","govt-dev","govt-test","gpc20-dev","gpc20-test","gr012-dev","gr012-test","gr015-dev","gr015-test","guille-test","healthtrck-dev","healthtrck-test","hnmvp-dev","hnmvp-test","hpcsplay-dev","hpz-dev","hpz-test","htest-dev","htest-test","hubcore-dev","hubcore-test","hubgrv-dev","hubgrv-test","hubnext-dev","hubnext-test","iad-dev","iad-test","ibtsandapp-dev","ibtsandapp-test","infa-dev","infa-test","infcm-test","infiac-dev","infiac-test","infpaas-dev","infpaas-test","infscr-dev","infscr-test","ire2-dev","ire2-test","iretst-dev","iretst-test","ist-dev","ist-test","it-inf-ocp-test-psql","it009-dev","it009-test","itas-dev","itas-test","itbrave001-dev","itbrave001-test","itcbts-dev","itcbts-test","itcbtsplay-dev","itcbtsplay-test","itcspm-dev","itcspm-test","itedsbwsts-dev","itedsbwsts-test","itedssandb-dev","itedssandb-test","itox01-dev","itox01-test","itox02-test","itrdm63223-dev","itrdm63223-test","itrdmahid-dev","itrdmahid-test","itrdmbind-dev","itrdmbind-test","itrdmccfw-dev","itrdmccfw-test","itrdmchlad-dev","itrdmchlad-test","itrdmdonor-dev","itrdmdonor-test","itrdmedesi-dev","itrdmedesi-test","itrdmfeps-dev","itrdmfeps-test","itrdmpesto-dev","itrdmpesto-test","itrdmpvs-dev","itrdmreqba-dev","itrdmreqba-test","itsec-dev","itsec-test","iumes-dev","iumes-test","janus-dev","janus-test","jboss-example-dev","jboss-example-qa","jobg-dev","jobg-test","jp005-dev","jp005-test","kew-dev","kew-test","knm-dev","knm-test","label2019-dev","label2019-test","lar-dev","lar-test","les-dev","les-test","lima-dev","lima-test","lpp-dev","lpp-test","management-infra","marko-testing","mars-dev","mars-test","mblach-test","mbs-dev","mbs-test","mbxmbed-dev","mbxmbed-test","mdm-dev","mdm-test","mdr-dev","mdr-test","megalab-dev","megalab-test","mi018-dev","mi018-test","ml02-dev","ml02-test","mod1-dev","mod1-test","mps-test","mufa","nds-dev","nds-test","nl013-dev","nl013-test","no009-dev","no009-test","nrl-dev","nrl-test","nwsam-dev","nwsam-test","odinwebapp-dev","odinwebapp-test","odl-automation","odl-automation-dev","odlacq-dev","odlacq-test","odldq-dev","odldq-test","odlfw-dev","odlfw-test","odlmon-dev","odlmon-test","odlms-test","odm-dev","odsl-dev","odsl-test","odsst-test","oio-dev","opsint2025-dev","opsint2025-test","ords-dev","ords-test","pbj101-dev","pbj101-test","phtx-dev","phtx-test","pkuxu-dev","pkuxu-test","pl003-dev","pl003-test","pl004-dev","pl004-test","plf-dev","plf-test","pltf-dev","pltf-test","pmx1-dev","pmx1-test","pmxtools-dev","pmxtools-test","pos-dev","pos-test","pptp-dev","pptp-test","prd-dev","prd-test","prep2020-dev","prep2020-test","prj-dev","prj-test","profiles-dev","profiles-test","project1-dev","project1-test","prov-test","pscience-dev","pscience-test","psql-dev","psql-test","pt011-dev","pt011-test","pt013-dev","pt013-test","pwa-dev","pwa-test","pynws-dev","pynws-test","qams-dev","qams-test","qv4cora-dev","qv4cora-test","rdg-as-dralabel-dev-jb7","rdg-as-dralabel-qa","rdmac001-dev","rdmac001-test","rdmdbex-dev","rdmdbex-test","redteam-dev","redteam-test","rk003-dev","rk003-test","rm003-dev","rm003-test","ro002-dev","ro002-test","ro003-dev","ro003-test","ro004-dev","ro004-test","rt01-dev","rt01-test","ru002-dev","ru002-test","ru003-dev","ru003-test","rv003-dev","rv003-test","rwe-dev","rwe-test","rz20190401-dev","rz20190401-test","sappo-dev","sappo-test","sara-dev","sara-test","sb00000001-dev","sb00000001-test","scar-dev","scar-test","scjupyter-dev","scjupyter-test","sco-dev","sco-test","sd2030-dev","sd2030-test","sdi62275-dev","sdi62275-test","se010-dev","se010-test","se013-dev","se013-test","sebas-dev","sebas-test","sema001-dev","sema001-test","sfauto-dev","sfauto-test","sftom-dev","sftom-test","shared-services","shinyapp-dev","shinyapp-test","si001-dev","si001-test","si002-dev","si002-test","sib-dev","sib-test","sin-dev","sl001-dev","sl001-test","smartland1-dev","smartland1-test","smartskin-dev","smartskin-test","snbi-dev","snbi-test","snplanbi-dev","snplanbi-test","spd-dev","spd-test","spo-dev","spo-test","spot-dev","spot-test","sql01-dev","st00000001-dev","st00000001-test","starrseq-dev","starrseq-test","stjda-dev","stjda-test","sub-dev","sub-test","taaiecdw-dev","tad-dev","tad-test","tc01-dev","teamconn-test","test-arturoxv","test-site","test100-dev","test100-test","testroute","tftw-dev","tftw-test","tick-dev","tick-test","tir-dev","tir-test","tmcpit001-dev","tmcpit001-test","tomcat-example-dev","tosca-dev","tosca-test","tp01-dev","tp01-test","trainods-dev","trainods-test","trat-dev","trat-test","twg-dev","twg-test","twngxp-dev","twngxp-test","twops-dev","twops-test","uc401-dev","uc402-dev","uc402-test","uc403-dev","uc403-test","uft-dev","uft-test","uk014-dev","uk014-test","uk015-dev","uk015-test","us059-dev","us059-test","us060-dev","us060-test","us061-dev","us061-test","usaccamvp-dev","usaccamvp-test","valerie-dev","valerie-test","venus-dev","venus-test","viper-dev","viper-test","vmp-dev","vmp-test","vphc-dev","vtatl2-prod","webpro-dev","webpro-test","wifimdt-dev","wifimdt-test","wpsites-dev","wpsites-test","wsinv-dev","wsinv-test","wsp-dev","wsp-test","wwatcher-dev","wwatcher-test","zichner-dev","zichner-test","brassp-dev","brassp-test","cluster-monitoring","rdg-as-dralabel-dev"]
mSizeCandidates = ["adam-sso","adam-tmp","ai00000001-dev","ai00000001-test","atlasops-dev","atlasops-test","bi-as-bidatalab","bi-as-bidatalab-dev","cds-dev","cds-test","dynstrseg-dev","dynstrseg-test","edptb-dev","edsplat01-test","hpcsplay-test","infcm-dev","infiaas-dev","infiaas-test","itinf-dev","itinf-test","itox02-dev","itrdmpvs-test","mps-dev","odlms-dev","odlop-dev","odlop-test","odm-test","odsst-dev","qcm-dev","qcm-test","sin-test","sql01-test","tc01-test","tdadmin-test","teamconn-dev","tomcat-example-qa","uc401-test"]
lSizeCandidates = ["adam-dev","dvcd-dev","edsplat01-dev","finf-dev","finf-test","tdadmin-dev"]

def quotaApplier(candidates):
    for projects in candidates:
        print("Starting operations in project: " + projects)
        print("Patching deploymentConfigs strategy")
        dcList = os.popen("oc get dc -n " + projects + " --no-headers | cut -f1 -d ' ' ").read().split("\n")
        for dc in dcList:
            strategyCheck = os.popen( "oc get dc " + dc + " -n "+ projects +" -o json | jq -r '.spec.strategy.type'").read().split("\n")
            if strategyCheck[0] == 'Rolling':
                print("Patching deployment config " + dc + " in project: " + projects)
                #Patching code
                os.popen("oc patch dc/"+dc+" -n "+projects+" -p '[{\"op\":\"replace\", \"path\":\"/spec/strategy/rollingParams\", \"value\":{\"maxUnavailable\": \"100%\",\"maxSurge\":\"0%\"}}]' --type json")
            else:
                pass
        if candidates == sSizeCandidates:
            print("Applying quota")
            os.popen("oc apply -f /root/quotas/s-size/s-size-quota.yaml -n"+ projects)
            print("Applying limits")
            os.popen("oc apply -f /root/quotas/s-size/s-size-limit.yaml -n"+ projects)
        elif candidates == mSizeCandidates:
            print("Applying quota")
            os.popen("oc apply -f /root/quotas/m-size/m-size-quota.yaml -n"+ projects)
            print("Applying limits")
            os.popen("oc apply -f /root/quotas/m-size/m-size-limit.yaml -n"+ projects)
        elif candidates == lSizeCandidates:
            print("Applying quota")
            os.popen("oc apply -f /root/quotas/l-size/l-size-quota.yaml -n"+ projects)
            print("Applying limits")
            os.popen("oc apply -f /root/quotas/l-size/l-size-limit.yaml -n"+ projects)
        else:
            print("Candidates are wrong. Passing")

    print("finished candidate list")
    print("starting next batch")

quotaApplier(sSizeCandidates)
quotaApplier(mSizeCandidates)
quotaApplier(lSizeCandidates)