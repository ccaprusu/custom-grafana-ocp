apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: influxdb
  labels:
    app: influxdb
    template: influxdb
  annotations:
  "openshift.io/display-name": influxdb
  description: |
    A Influxdb deployment that can be customized for different projects.
  tags: "monitoring,influxdb"
parameters:
- description: Custom Influxdb Image
  name: INFLUXDB_IMAGE
  value: "influxdb:1.8"
- description: Custom Influxdb Namespace
  name: NAMESPACE
  value: cluster-monitoring
- description: Influxdb Persistent Volume Size
  name: INFLUXDB_PV_SIZE
  value: 1Gi
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: CrossVale Inc.
    labels:
      app: influxdb
    name: influxdb
    namespace: "${NAMESPACE}"
  spec:
    replicas: 1
    selector:
      app: influxdb
      deploymentconfig: influxdb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: CrossVale Inc.
        labels:
          app: influxdb
          deploymentconfig: influxdb
      spec:
        containers:
        - image: ${INFLUXDB_IMAGE}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /ping
              port: 8086
              scheme: HTTP
          name: influxdb
          ports:
          - containerPort: 8086
            protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 100Mi
            requests:
              cpu: 150m
              memory: 16Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/influxdb
            name: influxdb-data
          - mountPath: /etc/influxdb
            name: influxdb-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: influxdb-data
          persistentVolumeClaim:
            claimName: influxdb-data
        - name: influxdb-config
          configMap:
            defaultMode: 420
            name: influxdb-config
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: influxdb-config
    labels:
      app: influxdb
      template: influxdb
    namespace: "${NAMESPACE}"
  data:
    influxdb.conf: |
      [meta]
        dir = "/var/lib/influxdb/meta"

      [data]
        dir = "/var/lib/influxdb/data"
        engine = "tsm1"
        wal-dir = "/var/lib/influxdb/wal"

      [http]
        enabled = true
        bind-address = ":8086"
        auth-enabled = true
        log-enabled = true
        write-tracing = false
        pprof-enabled = true
        pprof-auth-enabled = false
        debug-pprof-enabled = false
        ping-auth-enabled = false
        https-enabled = false
        https-certificate = "/etc/ssl/influxdb.pem"

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: influxdb-data
    labels:
      app: influxdb
      template: influxdb
    namespace: "${NAMESPACE}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${INFLUXDB_PV_SIZE}"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: CrossVale Inc.
    labels:
      app: influxdb
    name: influxdb
    namespace: "${NAMESPACE}"
  spec:
    ports:
    - name: 8086-tcp
      port: 8086
      protocol: TCP
      targetPort: 8086
    selector:
      app: influxdb
      deploymentconfig: influxdb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    namespace: "${NAMESPACE}"
    name: influxdb-bootstrap
  spec:
    template:
      spec:
        initContainers:
        - name: wait-for-influxdb
          image: appropriate/curl
          resources:
            limits:
              cpu: 150m
              memory: 50Mi
            requests:
              cpu: 150m
              memory: 50Mi
          args:
          - "sh"
          - "-c"
          - "while [ $(curl -sw %{http_code} http://influxdb:8086/ping -o /dev/null) -ne 204 ]; do sleep 15; done"
        containers:
        - name: influxdb-privileges
          image: appropriate/curl
          command: ['sh', '-c', 'curl -s -XPOST http://influxdb:8086/query --data-urlencode "q=CREATE USER admin WITH PASSWORD ''mypass'' WITH ALL PRIVILEGES"']
        - name: influxdb
          image: appropriate/curl
          command: ['sh', '-c', 'curl -s -XPOST "http://influxdb:8086/query?u=admin&p=mypass" --data-urlencode "q=CREATE DATABASE pushdata"']
        - name: influxdb-add-datasource-to-grafana
          image: appropriate/curl
          command: ['sh', '-c', 'curl -s -XPOST -H "Content-Type: application/json" -d ''{"id":2,"orgId":1,"name":"InfluxDB","type":"influxdb","typeLogoUrl":"public/app/plugins/datasource/influxdb/img/influxdb_logo.svg","access":"proxy","url":"http://influxdb.cluster-monitoring.svc.cluster.local:8086","secureJsonFields":{"password":"mypass"},"user":"admin","database":"pushdata","basicAuth":false,"isDefault":false,"jsonData":{"httpMode":"GET","tlsSkipVerify":true,"password":"mypass"},"readOnly":false}'' "admin:Ws2Fb1hpf4@grafana.cluster-monitoring.svc.cluster.local:3000/api/datasources"']
        restartPolicy: Never
